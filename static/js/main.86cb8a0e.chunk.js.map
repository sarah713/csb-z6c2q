{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOpn","selectedCurrency","onChangeCurrency","amount","onChangeAmount","className","type","value","onChange","map","option","conversion_rates","BASE_URL","App","to","from","useState","setCurrencyopn","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","exchangerate","setExchangerate","fromAmt","setFromAmt","useEffect","fetch","then","res","json","data","currency","Object","keys","base_code","e","target","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8OAwBeA,MAtBf,SAAqBC,GAAQ,IAEzBC,EAKED,EALFC,YACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,OACAC,EACEL,EADFK,eAEF,OACE,sBAAKC,UAAU,WAAf,UACE,uBAAOC,KAAK,SAASC,MAAOJ,EAAQK,SAAUJ,IAC9C,wBAAQG,MAAON,EAAkBO,SAAUN,EAA3C,SACGF,EAAYS,KAAI,SAACC,GAAD,OACf,wBAAsCH,MAAOG,EAA7C,SACGA,GADUA,EAAOC,2BCXxBC,EACJ,yEAoEaC,MAnEf,WAAgB,IAgBVC,EAAIC,EAhBK,EACyBC,mBAAS,IADlC,mBACNhB,EADM,KACOiB,EADP,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAIeL,mBAAS,GAJxB,mBAINb,EAJM,KAIEmB,EAJF,OAK2BN,qBAL3B,mBAKNO,EALM,KAKQC,EALR,OAMiBR,oBAAS,GAN1B,mBAMNS,EANM,KAMGC,EANH,OAOaV,oBAAS,GAPtB,mBA6Cb,OA7Ca,UAiBTS,GACFV,EAAOZ,EACPW,EAAKX,EAASoB,IAEdT,EAAKX,EACLY,EAAOZ,EAASoB,GAGlBI,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAWC,OAAOC,KAAKH,EAAKrB,kBAAkB,KACpDa,EAAgBQ,EAAKrB,iBAAiBsB,IAEtChB,EAAe,CAACe,EAAKI,WAAP,mBAAqBF,OAAOC,KAAKH,EAAKrB,qBACpDQ,EAAgBa,EAAKI,WACrBf,EAAcY,QAEjB,IACHN,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,sBAA0BM,EAA1B,oBAAkDE,IACpDS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUR,EAAgBQ,EAAKrB,iBAAiBS,SAEzD,CAACF,EAAcE,IAGhB,qBAAKf,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,0CACA,cAAC,EAAD,CACEL,YAAaA,EACbC,iBAAkBiB,EAClBd,eA5Cc,SAACiC,GACrBf,EAAUe,EAAEC,OAAO/B,OACnBmB,GAAW,IA2CLvB,OAAQY,IAEV,cAAC,EAAD,CACEf,YAAaA,EACbC,iBAAkBmB,EAClBlB,iBAAkB,SAACmC,GAAD,OAAOhB,EAAcgB,EAAEC,OAAO/B,QAChDJ,OAAQW,EACRV,eAhDY,SAACiC,GACnBf,EAAUe,EAAEC,OAAO/B,OACnBmB,GAAW,YCfTa,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.86cb8a0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CurrencyRow.css\";\r\nfunction CurrencyRow(props) {\r\n  const {\r\n    currencyOpn,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    amount,\r\n    onChangeAmount\r\n  } = props;\r\n  return (\r\n    <div className=\"curr_row\">\r\n      <input type=\"number\" value={amount} onChange={onChangeAmount} />\r\n      <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n        {currencyOpn.map((option) => (\r\n          <option key={option.conversion_rates} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyRow;\r\n","import { useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\nimport CurrencyRow from \"./CurrencyRow\";\nconst BASE_URL =\n  \"https://v6.exchangerate-api.com/v6/ec0ea9f7588eb39401ef9160/latest/INR\";\nfunction App() {\n  const [currencyOpn, setCurrencyopn] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [amount, setAmount] = useState(1);\n  const [exchangerate, setExchangerate] = useState();\n  const [fromAmt, setFromAmt] = useState(true);\n  const [toAmt, setToAmt] = useState(true);\n  const handleFromAmt = (e) => {\n    setAmount(e.target.value);\n    setFromAmt(true);\n  };\n  const handleToAmt = (e) => {\n    setAmount(e.target.value);\n    setFromAmt(false);\n  };\n  let to, from;\n  if (fromAmt) {\n    from = amount;\n    to = amount * exchangerate;\n  } else {\n    to = amount;\n    from = amount / exchangerate;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        const currency = Object.keys(data.conversion_rates)[145];\n        setExchangerate(data.conversion_rates[currency]);\n\n        setCurrencyopn([data.base_code, ...Object.keys(data.conversion_rates)]);\n        setFromCurrency(data.base_code);\n        setToCurrency(currency);\n      });\n  }, []);\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base_code=${fromCurrency}&symbols=${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => setExchangerate(data.conversion_rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"wrapper\">\n        <h3>Converto</h3>\n        <CurrencyRow\n          currencyOpn={currencyOpn}\n          selectedCurrency={fromCurrency}\n          onChangeAmount={handleFromAmt}\n          amount={from}\n        />\n        <CurrencyRow\n          currencyOpn={currencyOpn}\n          selectedCurrency={toCurrency}\n          onChangeCurrency={(e) => setToCurrency(e.target.value)}\n          amount={to}\n          onChangeAmount={handleToAmt}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}